{"version":3,"sources":["constant/initialData/initialData.js","components/NavBar/NavBar.js","components/NavBar/index.js","components/ToDo/ToDo.js","components/ToDoList/ToDoList.js","components/ToDoList/index.js","components/AddTask/AddTask.js","components/Fetching/Fetching.js","components/Fetching/index.js","app/index.js","app/App.js","index.js"],"names":["initialData","id","name","completed","NavBar","_ref","onDeleteCompleted","react_default","a","createElement","className","react_router_dom","to","exact","index_esm","onClick","ToDo","state","_this","props","task","toggleCompleted","setState","prevState","onToggleCompleted","_this2","this","Component","ToDoList","filteredTasks","tasks","match","params","filter","length","Fragment","map","components_ToDo_ToDo","key","AddTask","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleSubmit","e","preventDefault","onAddTask","newTask","value","history","push","inherits","createClass","onSubmit","form","type","required","ref","input","Fetching","App","fetching","componentDidMount","delay","Math","floor","random","setTimeout","taskId","taskToUpdadte","find","newTaskName","uniqueid","toConsumableArray","components_Fetching","react_router","path","render","components_AddTask_AddTask","assign","components_ToDoList","components_NavBar","ReactDOM","app","document","getElementById"],"mappings":"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","file":"static/js/main.103ae1d1.chunk.js","sourcesContent":["let initialData = [\n  {\n    id: \"jserv4sw\",\n    name: \"Regarder les nouvelles offres d'emploi üîç\",\n    completed: false,\n  },\n  {\n    id: \"jseruy2q\",\n    name: \"Relancer les derni√®res candidatures ‚úâÔ∏è\",\n    completed: false,\n  },\n  {\n    id: \"jseruo7l\",\n    name: \"√âcouter le dernier album de Whist üêô\",\n    completed: false,\n  },\n  { id: \"jsertu7a\", name: \"Aller √† l'escalade üßó‚Äç‚ôÄÔ∏è\", completed: false },\n];\n\nexport default initialData;","import React from 'react'\r\nimport {FaListAlt, FaCheckSquare, FaPlusSquare, FaTrash} from 'react-icons/fa'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction NavBar({onDeleteCompleted}) {\r\n  return (\r\n    <footer className=\"d-flex justify-content-between bg-secondary p-3\" id=\"mainFooter\">\r\n        <div className=\"btn-group\">\r\n            <NavLink to=\"/\"             className=\"btn btn-outline-dark bg-light\" exact={true}> <FaCheckSquare />    </NavLink>\r\n            <NavLink to=\"/completed\"    className=\"btn btn-outline-dark bg-light\">              <FaListAlt />        </NavLink>\r\n            <NavLink to=\"/add-task\"     className=\"btn btn-outline-dark bg-light\">              <FaPlusSquare />     </NavLink>\r\n        </div>\r\n        <button className=\"btn btn-outline-dark bg-light\" onClick={onDeleteCompleted}><FaTrash /></button>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default NavBar\r\n","import NavBar from \"./NavBar\";\r\n\r\nexport default NavBar;","import React, { Component } from 'react'\r\n\r\nclass ToDo extends Component {\r\n\r\n  state ={\r\n    completed: this.props.task.completed,\r\n  }\r\n\r\n  toggleCompleted = () => {\r\n    this.setState(prevState => ({\r\n      completed: !prevState.completed\r\n    }))\r\n    this.props.onToggleCompleted(this.props.task.id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className={\"list-group-item d-flex align-tiems-center justify-content-between \" + (this.state.completed? 'bg-success': null)}>\r\n        {this.props.task.name}\r\n        <button className={\"btn btn-sm ml-auto \" + (this.state.completed? 'btn-success': 'btn-outline-success')} onClick={() => this.toggleCompleted()}>\r\n          &#x2713;\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDo\r\n\r\n","import React from 'react'\r\nimport ToDo from '../ToDo/ToDo';\r\n\r\nfunction ToDoList({ tasks, match, onToggleCompleted }) {\r\n  let filteredTasks;\r\n\r\n  switch (match.params.filter) {\r\n    case \"completed\":\r\n      filteredTasks = tasks.filter((task) => task.completed);\r\n      break;\r\n    default:\r\n      filteredTasks = tasks;\r\n  }\r\n\r\n  if (filteredTasks.length === 0) {\r\n    return (\r\n      <>\r\n        <h1 className=\"m-3\">Liste de t√¢ches</h1>\r\n        <ul className=\"list-group m-3\">\r\n          <li className=\"list-group-item\">Aucune t√¢che √† afficher</li>\r\n        </ul>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <h1 className=\"m-3\">Liste de t√¢ches</h1>\r\n        <ul className=\"list-group m-3\">\r\n          {filteredTasks.map((task) => (\r\n            <ToDo task={task} key={task.id} onToggleCompleted={onToggleCompleted} />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n","import ToDoList from \"./ToDoList\";\r\n\r\nexport default ToDoList;","import React, { Component } from 'react'\r\n\r\nexport class AddTask extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.onAddTask(this.newTask.value)\r\n    this.props.history.push('/')\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <h1 className=\"m-3\">Nouvelle t√¢che</h1>\r\n        <div className=\"card mx-3\">\r\n          <form className=\"card-body\" onSubmit={e => this.handleSubmit(e)}>\r\n            <div className=\"form-group\">\r\n              <label form=\"taskName\">Nom de la t√¢che</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"taskName\" id=\"taskName\" required ref={input => this.newTask = input} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Cr√©er\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\r\nimport { FaSpinner } from 'react-icons/fa'\r\n\r\nfunction Fetching() {\r\n  return (\r\n    <div className='fetching'>\r\n      <FaSpinner className='spinner'/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Fetching\r\n","import Fetching from \"./Fetching\";\r\n\r\nexport default Fetching","import App from \"./App\";\r\n\r\nexport default App;","import React, { Component } from 'react'\r\n\r\nimport initialData from '../constant/initialData/initialData';\r\nimport NavBar from '../components/NavBar';\r\nimport ToDoList from '../components/ToDoList';\r\nimport AddTask from '../components/AddTask/AddTask';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport uniqueid from 'uniqueid'\r\nimport Fetching from '../components/Fetching';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        tasks: [],\r\n        fetching: true\r\n    }\r\n\r\n    componentDidMount =() => {\r\n        let delay = Math.floor(Math.random()* 2000)\r\n\r\n        setTimeout( () => {\r\n            this.setState({\r\n                fetching: false,\r\n                tasks: initialData\r\n            })\r\n        }, delay)\r\n    }\r\n\r\n    onToggleCompleted = (taskId) => {\r\n        let taskToUpdadte = this.state.tasks.find(task => task.id === taskId)\r\n        taskToUpdadte.completed = !taskToUpdadte.completed\r\n\r\n        this.setState(prevState => (\r\n            prevState.tasks.map(task => {\r\n                return task.id === taskId ? taskToUpdadte : task\r\n            })\r\n        ))\r\n    }\r\n\r\n    onAddTask =(newTaskName) => {\r\n        let newTask = {\r\n            id: uniqueid(),\r\n            name: newTaskName,\r\n            completed: false\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            tasks: [...prevState.tasks, newTask]\r\n        }))\r\n    }\r\n\r\n    onDeleteCompleted = () => {\r\n        this.setState(prevState => {\r\n            let newState = prevState.tasks.filter(task => !task.completed)\r\n            return{\r\n                tasks: newState\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"todo\">\r\n        {this.state.fetching? <Fetching/> : null }\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/add-task\" render={(props) => <AddTask {...props} onAddTask={this.onAddTask} />}/>\r\n                <Route path=\"/:filter?\" render={(props) => <ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} />}/>\r\n            </Switch>\r\n        <NavBar onDeleteCompleted={this.onDeleteCompleted} />\r\n        </BrowserRouter>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\nimport  ReactDOM  from \"react-dom\";\nimport App from './app'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './styles/toDo.css'\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}